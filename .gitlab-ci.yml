variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: 'tcp://docker:2375'
    DOCKER_TLS_CERTDIR: '/certs'
    MYSQL_ROOT_PASSWORD: root
    MYSQL_USER: app
    MYSQL_PASSWORD: app
    MYSQL_DATABASE: shopware
    WEB_DOCUMENT_ROOT: $CI_PROJECT_DIR/
    GIT_STRATEGY: clone
    SHOPWARE_ENV: swagmigrationtest
    CHECKOUT_SHOPWARE_BRANCH: '5.7'
    PLUGIN_NAME: SwagMigration
    SW_HOST: localhost
    SW_BASE_PATH: ''
    SW_VERSION: '5.7.7'
    SW_KERNEL: 'Kernel.php'

stages:
    - Code Analysis

default:
    image: gitlab.shopware.com:5005/shopware/5/product/image/continuous:7.4
    tags:
        - t3.medium
    interruptible: true

.prepare_files_script: &prepare_files_script
    - zip -rq plugin.zip .
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/5/product/shopware.git shopware --depth=1 -b ${CHECKOUT_SHOPWARE_BRANCH}
    - unzip -q plugin.zip -d shopware/engine/Shopware/Plugins/Local/Backend/${PLUGIN_NAME}
    - composer install -d shopware
    - composer install -d shopware/recovery/common
    - cd shopware

.prepare_files_composer_bin_script: &prepare_files_composer_bin_script
    - composer bin all install

JavaScript analyze:
    stage: Code Analysis
    image: node:alpine
    services: []
    before_script:
        - apk add --no-cache make bash zip unzip git
        - zip -rq plugin.zip .
        - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.shopware.com/shopware/5/product/shopware.git shopware --depth=1 -b ${CHECKOUT_SHOPWARE_BRANCH}
        - unzip -q plugin.zip -d shopware/engine/Shopware/Plugins/Local/Backend/${PLUGIN_NAME}
    script:
        - cd shopware
        - make .make.install.npm-dependencies
        - cd engine/Shopware/Plugins/Local/Backend/${PLUGIN_NAME}
        - make check-eslint-backend


PHP analyze:
    stage: Code Analysis
    before_script:
        - *prepare_files_script
        - *prepare_files_composer_bin_script
    script:
        - cd engine/Shopware/Plugins/Local/Backend/${PLUGIN_NAME}
        - make fix-cs-dry
